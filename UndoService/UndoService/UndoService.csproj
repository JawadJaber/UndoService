<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Authors>Peter Dongan</Authors>
    <Company />
    <PackageLicenseFile></PackageLicenseFile>
    <Description>Simple undo/redo service based on the momento pattern. It uses delegates to access state. It can track changes to different parts of the application individually, while using one unified interface for performing undo/redo. This reduces the memory imprint and facilitates modular design. See the unit tests for examples of usage (a link to the repo is provided).</Description>
    <Copyright>Peter Dongan</Copyright>
    <PackageProjectUrl>https://github.com/peterdongan/UndoService</PackageProjectUrl>
    <RepositoryType>Git</RepositoryType>
    <PackageTags>undo redo momento service .net</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <RepositoryUrl>https://github.com/peterdongan/UndoService</RepositoryUrl>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <FileVersion>2.0.0.0</FileVersion>
    <PackageReleaseNotes>AggregateUndoService added. This provides unified undo/redo across multiple UndoServices, which can track the state of different parts of your application.</PackageReleaseNotes>
    <Version>2.0</Version>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile></DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="LICENCE.txt" />
  </ItemGroup>

</Project>
